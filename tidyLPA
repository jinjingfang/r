# This is an example of how to do latent profile analysis in R using tidyLPA

#Latent profile analysis

# Load the haven package
library(haven)

# Read the SAV file
data_AG_P <- read_sav("AGQNZ_FMPS.spv")

library(lavaan)
#FMPS revised model
FMPS1.model <- 'CM =~ MPS_CM1 + MPS_CM2 + MPS_CM3 + MPS_CM4 + MPS_CM5 + MPS_CM6 + MPS_CM7 + MPS_CM8 + MPS_CM9 + MPS_PS1
DA =~ MPS_DA1 + MPS_DA1 + MPS_DA3 + MPS_DA4
PE =~ MPS_PE1 + MPS_PE2 + MPS_PE3 + MPS_PE4 + MPS_PE5 
PC =~ MPS_PC1 + MPS_PC2 + MPS_PC3 + MPS_PE5 
PS =~ MPS_PS1 + MPS_PS2 + MPS_PS3 + MPS_PS4 + MPS_PS5 + MPS_PS6 + MPS_PS7 
MPS_CM1 ~~ MPS_CM2
MPS_CM3 ~~ MPS_CM4
MPS_PC1 ~~ MPS_PC2
MPS_DA3 ~~ MPS_DA4
MPS_PS1 ~~ MPS_PS2
MPS_PS6 ~~ MPS_PS7'

fit<-sem(FMPS1.model, data=data, estimator="MLR")
predicted_values<-lavPredict(fit, type = "lv")
data_latent <- cbind(data, predicted_values)

library(dplyr)
data_lv<-data_latent %>%
  select(CM,DA,PE,PC,PS)

library(tidyLPA)
m1 <- data_lv %>%
  single_imputation() %>%
  scale() %>%
  estimate_profiles(1)
fittable<-get_fit(m1)

m2 <- data_lv %>%
  single_imputation() %>%
  scale() %>%
  estimate_profiles(2)
fittable<-rbind(fittable, get_fit(m2))

m3 <- data_lv %>%
  single_imputation() %>%
  scale() %>%
  estimate_profiles(3)
fittable<-rbind(fittable, get_fit(m3))

m4 <- data_lv %>%
  single_imputation() %>%
  scale() %>%
  estimate_profiles(4)
fittable<-rbind(fittable, get_fit(m4))

m5 <- data_lv %>%
  single_imputation() %>%
  scale() %>%
  estimate_profiles(5)
fittable<-rbind(fittable, get_fit(m5))

m6 <- data_lv %>%
  single_imputation() %>%
  scale() %>%
  estimate_profiles(6)
fittable<-rbind(fittable, get_fit(m6))

get_data(m4)
#save results
write.csv(fittable,"fittable.csv")

#profile plot
plot_profiles(m3, add_line = FALSE, rawdata = FALSE, alpha_range = c(0,0.1))
plot_profiles(m4, add_line = FALSE, rawdata = FALSE, alpha_range = c(0,0.1))

esttable<-get_estimates(m3)
write.csv(esttable,"esttable3.csv")
esttable<-get_estimates(m4)
write.csv(esttable,"esttable4.csv")

#filter data
means_data <- subset(esttable, Category == "Means")
variances_data <- subset(esttable, Category == "Variances")

#getting probability for the solution (this is a 3-class solution)
probdata<-get_data(m3)
head(cbind(probdata$CPROB1,
           probdata$CPROB2,
           probdata$CPROB3))
#appending probabilities to original dataset
probdata<-probdata[, c("Class",
                       "CPROB1",
                       "CPROB2",
                       "CPROB3")]
classdata<-cbind(probdata, df)
